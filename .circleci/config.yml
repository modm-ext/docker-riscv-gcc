version: 2
jobs:

  build:
    docker:
      - image: modm/riscv-gcc-prerequisites:latest
    steps:
      - run:
          name: Git Clone
          command: |
            git clone --recursive --jobs 16 --quiet https://github.com/riscv/riscv-gnu-toolchain
          no_output_timeout: 20m
      - run:
          name: Configure
          command: |
            cd riscv-gnu-toolchain
            ./configure --prefix=/opt/modm-riscv-gcc --enable-multilib
      - run:
          name: Build
          command: |
            cd riscv-gnu-toolchain
            make -j4
      - run:
          name: Compiling test files
          command: |
            /opt/modm-riscv-gcc/bin/riscv64-unknown-elf-g++ --version
            echo "int main() { return 0;}" > main1.cpp
            /opt/modm-riscv-gcc/bin/riscv64-unknown-elf-g++ main1.cpp
      #- run:
      #    name: Fake toolchain
      #    command: |
      #      mkdir -p /opt/riscv-gcc/bin
      #      cp $(which true) /opt/riscv-gcc/bin/riscv64-unknown-elf-g++
      - run:
          name: Create Tarball
          command: |
            mkdir -p workspace
            tar cjf workspace/modm-riscv-gcc.tar.bz2 -C /opt modm-riscv-gcc
      - store_artifacts:
          path: workspace/modm-riscv-gcc.tar.bz2
          destination: modm-riscv-gcc.tar.bz2
      - persist_to_workspace:
          root: workspace
          paths:
            - modm-riscv-gcc.tar.bz2

  deploy:
    docker:
      - image: circleci/golang:latest
    steps:
      - attach_workspace:
          at: workspace
      - run:
          name: Get GHR
          command: go get github.com/tcnksm/ghr
      - run:
          name: Deploy
          command: ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME $CIRCLE_TAG workspace/modm-riscv-gcc.tar.bz2

workflows:
  version: 2

  build-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
      # Only run when pushing a tag!
      - deploy:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
          requires:
            - build
